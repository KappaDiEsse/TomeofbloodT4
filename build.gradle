buildscript {
    repositories {
        maven { url 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
        maven { url 'https://modmaven.dev/' }
        maven {
            name "Sponge"
            url "https://repo.spongepowered.org/repository/maven-public/"
        }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '4.1.+', changing: true
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
    }

}

apply plugin: 'net.minecraftforge.gradle'

// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'org.spongepowered.mixin'


version = '1.0.0'
if (System.getenv('BUILD_NUMBER') != null) {
    version += "." + System.getenv('BUILD_NUMBER')
}
archivesBaseName = 'Tome-of-blood-T4'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

minecraft {
    // The mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   Snapshot are built nightly.
    // stable_#            Stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    mappings channel: 'snapshot', version: '20210309-1.16.5'
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            mods {
                tomeoblood {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                tomeofblood {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
            args '--mod', 'tomeofblood', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                tomeofblood {
                    source sourceSets.main
                }
            }
        }
    }
}



repositories {

    mavenLocal()

    maven {
        url "https://mvnrepository.com/artifact/net.minecraftforge/forge"
    }

    maven {
        url "https://repo.codemc.org/repository/maven-public/"
    }

    maven {
        url "http://tehnut.info/maven/"
    }

    maven {
        url = "https://maven.theillusivec4.top/"
    }
    maven {
        // location of the maven that hosts JEI files
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        // location of a maven mirror for JEI files, as a fallback
        name = "ModMaven"
        url = "https://modmaven.k-4u.nl"
    }
    maven {
        url "https://maven.blamejared.com"
    }
    maven {
        url "https://www.cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
    maven {
        name 'LDTTeam - Modding'
        url 'https://ldtteam.jfrog.io/ldtteam/modding/'
    }
    maven { url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/' }
    jcenter()
    mavenCentral()
}
dependencies {

    minecraft 'net.minecraftforge:forge:1.16.5-36.2.39'


    compileOnly fg.deobf("vazkii.patchouli:Patchouli:1.16.4-50")
    runtimeOnly fg.deobf("vazkii.patchouli:Patchouli:1.16.4-50")
    compileOnly fg.deobf("curse.maven:exp-238222:3530253") // JEI
    runtimeOnly fg.deobf("curse.maven:exp-238222:3530253")

    compileOnly fg.deobf("top.theillusivec4.curios:curios-forge:1.16.3-4.0.1.0:api")
    runtimeOnly fg.deobf("top.theillusivec4.curios:curios-forge:1.16.3-4.0.1.0")
    implementation fg.deobf('software.bernie.geckolib:geckolib-forge-1.16.5:3.0.64')

    compileOnly fg.deobf("com.yourname.modid:BloodMagic:1.16.4-3.1.0-15")
    runtimeOnly fg.deobf("com.yourname.modid:BloodMagic:1.16.4-3.1.0-15")

    compileOnly fg.deobf("io.github.bananapuncher714:nbteditor:7.18.3")
    runtimeOnly fg.deobf("io.github.bananapuncher714:nbteditor:7.18.3")


    compileOnly fg.deobf("com.hollingsworth.ars_nouveau:ars_nouveau-1.16.5:1.25.7")
    runtimeOnly fg.deobf("com.hollingsworth.ars_nouveau:ars_nouveau-1.16.5:1.25.7")

    compileOnly fg.deobf("curse.maven:arsomega-1.5-597007:3923720")
    runtimeOnly fg.deobf("curse.maven:arsomega-1.5-597007:3923720")


    annotationProcessor 'org.spongepowered:mixin:0.8.2:processor'
    testAnnotationProcessor 'org.spongepowered:mixin:0.8.2:processor'
}

mixin {
    add sourceSets.main, "tomeofblood.refmap.json"
}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
                "Specification-Title": "Tome of Blood T4",
                "Specification-Vendor": "examplemodsareus",
                "Specification-Version": "1", // We are version 1 of ourselves
                "Implementation-Title": project.name,
                "Implementation-Version": "${version}",
                "Implementation-Vendor" :"examplemodsareus",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

// Example configuration to allow publishing using the maven-publish task
// we define a custom artifact that is sourced from the reobfJar output task
// and then declare that to be published
// Note you'll need to add a repository here
def reobfFile = file("$buildDir/reobfJar/output.jar")
def reobfArtifact = artifacts.add('default', reobfFile) {
    type 'jar'
    builtBy 'reobfJar'
}
publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId project.group
            artifactId project.archivesBaseName
            version project.version
            artifact reobfArtifact

            pom.withXml {

                // Go through all the dependencies.
                asNode().dependencies.dependency.each { dep ->

                    println 'Surpressing artifact ' + dep.artifactId.last().value().last() + ' from maven dependencies.'
                    assert dep.parent().remove(dep)
                }
            }
        }
    }
    repositories {
        maven {
            url "file://" + System.getenv("local_maven")
        }
    }
}

// Disables Gradle's custom module metadata from being published to maven. The
// metadata includes mapped dependencies which are not reasonably consumable by
// other mod developers.
tasks.withType(GenerateModuleMetadata) {

    enabled = false
}